package psycho.euphoria.tools.commons

import android.os.Build
import android.os.Looper


fun isOnMainThread() = Looper.myLooper() == Looper.getMainLooper()
fun isJellyBean1Plus() = Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1
fun isAndroidFour() = Build.VERSION.SDK_INT <= Build.VERSION_CODES.KITKAT_WATCH
fun isKitkatPlus() = Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT
fun isLollipopPlus() = Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP
fun isMarshmallowPlus() = Build.VERSION.SDK_INT >= Build.VERSION_CODES.M
fun isNougatPlus() = Build.VERSION.SDK_INT >= Build.VERSION_CODES.N
fun isOreoPlus() = Build.VERSION.SDK_INT >= Build.VERSION_CODES.O

const val KEY_SDCARD_PATH = "sdcard_path"
const val _DATA = "_data"
const val _ID = "_id"
const val AUTHORITY = "downloads"
const val BUFFER_SIZE = 8192
const val CLICK_MAX_DURATION = 150
const val COLUMN_ALLOW_METERED = "allow_metered"
const val COLUMN_ALLOW_ROAMING = "allow_roaming"
const val COLUMN_ALLOW_WRITE = "allow_write"
const val COLUMN_ALLOWED_NETWORK_TYPES = "allowed_network_types"
const val COLUMN_APP_DATA = "entity"
const val COLUMN_BYPASS_RECOMMENDED_SIZE_LIMIT = "bypass_recommended_size_limit"
const val COLUMN_CONTROL = "control"
const val COLUMN_COOKIE_DATA = "cookiedata"
const val COLUMN_CURRENT_BYTES = "current_bytes"
const val COLUMN_DELETED = "deleted"
const val COLUMN_DESCRIPTION = "description"
const val COLUMN_DESTINATION = "destination"
const val COLUMN_DOWNLOAD_ID = "download_id"
const val COLUMN_ERROR_MSG = "errorMsg"
const val COLUMN_FAILED_CONNECTIONS = "numfailed"
const val COLUMN_FILE_NAME_HINT = "hint"
const val COLUMN_FLAGS = "flags"
const val COLUMN_HEADER = "header"
const val COLUMN_IS_PUBLIC_API = "is_public_api"
const val COLUMN_IS_VISIBLE_IN_DOWNLOADS_UI = "is_visible_in_downloads_ui"
const val COLUMN_LAST_MODIFICATION = "lastmod"
const val COLUMN_LAST_UPDATESRC = "lastUpdateSrc"
const val COLUMN_MEDIA_SCANNED = "scanned"
const val COLUMN_MEDIAPROVIDER_URI = "mediaprovider_uri"
const val COLUMN_MIME_TYPE = "mimetype"
const val COLUMN_NO_INTEGRITY = "no_integrity"
const val COLUMN_NOTIFICATION_CLASS = "notificationclass"
const val COLUMN_NOTIFICATION_EXTRAS = "notificationextras"
const val COLUMN_NOTIFICATION_PACKAGE = "notificationpackage"
const val COLUMN_OTHER_UID = "otheruid"
const val COLUMN_REFERER = "referer"
const val COLUMN_STATUS = "status"
const val COLUMN_TITLE = "title"
const val COLUMN_TOTAL_BYTES = "total_bytes"
const val COLUMN_URI = "uri"
const val COLUMN_USER_AGENT = "useragent"
const val COLUMN_VALUE = "value"
const val COLUMN_VISIBILITY = "visibility"
const val CONST_ACCEPT = "Accept"
const val CONST_ACCEPT_CHARSET = "Accept-Charset"
const val CONST_ACCEPT_ENCODING = "Accept-Encoding"
const val CONST_ACCEPT_LANGUAGE = "Accept-Language"
const val CONST_ACCEPT_RANGES = "Accept-Ranges"
const val CONST_AGE = "Age"
const val CONST_ALLOW = "Allow"
const val CONST_AUTHORIZATION = "Authorization"
const val CONST_CACHE_CONTROL = "Cache-Control"
const val CONST_CONNECTION = "Connection"
const val CONST_CONTENT_DISPOSITION = "Content-Disposition"
const val CONST_CONTENT_ENCODING = "Content-Encoding"
const val CONST_CONTENT_LANGUAGE = "Content-Language"
const val CONST_CONTENT_LENGTH = "Content-Length"
const val CONST_CONTENT_LOCATION = "Content-Location"
const val CONST_CONTENT_M_D5 = "Content-MD5"
const val CONST_CONTENT_RANGE = "Content-Range"
const val CONST_CONTENT_TYPE = "Content-Type"
const val CONST_COOKIE = "Cookie"
const val CONST_COOKIE2 = "Cookie2"
const val CONST_DATE = "Date"
const val CONST_ETAG = "ETag"
const val CONST_EXPECT = "Expect"
const val CONST_EXPIRES = "Expires"
const val CONST_FROM = "From"
const val CONST_HOST = "Host"
const val CONST_IF_MATCH = "If-Match"
const val CONST_IF_MODIFIED_SINCE = "If-Modified-Since"
const val CONST_IF_NONE_MATCH = "If-None-Match"
const val CONST_IF_RANGE = "If-Range"
const val CONST_IF_UNMODIFIED_SINCE = "If-Unmodified-Since"
const val CONST_KEEP_ALIVE = "Keep-Alive"
const val CONST_LAST_MODIFIED = "Last-Modified"
const val CONST_LOCATION = "Location"
const val CONST_MAX_FORWARDS = "Max-Forwards"
const val CONST_ORIGIN = "Origin"
const val CONST_P3P = "P3P"
const val CONST_PRAGMA = "Pragma"
const val CONST_PROXY_AUTHENTICATE = "Proxy-Authenticate"
const val CONST_PROXY_AUTHORIZATION = "Proxy-Authorization"
const val CONST_PROXY_CONNECTION = "Proxy-Connection"
const val CONST_RANGE = "Range"
const val CONST_REFERER = "Referer"
const val CONST_RETRY_AFTER = "Retry-After"
const val CONST_SEC_WEB_SOCKET_ACCEPT = "Sec-WebSocket-Accept"
const val CONST_SEC_WEB_SOCKET_EXTENSIONS = "Sec-WebSocket-Extensions"
const val CONST_SEC_WEB_SOCKET_KEY = "Sec-WebSocket-Key"
const val CONST_SEC_WEB_SOCKET_PROTOCOL = "Sec-WebSocket-Protocol"
const val CONST_SEC_WEB_SOCKET_VERSION = "Sec-WebSocket-Version"
const val CONST_SERVER = "Server"
const val CONST_SET_COOKIE = "Set-Cookie"
const val CONST_SET_COOKIE2 = "Set-Cookie2"
const val CONST_T_E = "TE"
const val CONST_TRAILER = "Trailer"
const val CONST_TRANSFER_ENCODING = "Transfer-Encoding"
const val CONST_UPGRADE = "Upgrade"
const val CONST_USER_AGENT = "User-Agent"
const val CONST_VARY = "Vary"
const val CONST_VIA = "Via"
const val CONST_WARNING = "Warning"
const val CONST_WWW_AUTHENTICATE = "WWW-Authenticate"
const val CONST_X_ASP_NET_VERSION = "X-AspNet-Version"
const val CONST_X_POWERED_BY = "X-Powered-By"
const val CONTROL_PAUSED = 1
const val CONTROL_RUN = 0
const val DEFAULT_USER_AGENT = "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36"
const val DESTINATION_EXTERNAL = 0
const val DRAG_THRESHOLD = 8
const val ETAG = "etag"
const val EXT_ALBUM = 1024
const val EXT_ARTIST = 512
const val EXT_CAMERA_MODEL = 64
const val EXT_DATE_TAKEN = 32
const val EXT_DURATION = 256
const val EXT_EXIF_PROPERTIES = 128
const val EXT_LAST_MODIFIED = 16
const val EXT_NAME = 1
const val EXT_PATH = 2
const val EXT_RESOLUTION = 8
const val EXT_SIZE = 4
const val GROUP_BY_DATE_TAKEN = 4
const val GROUP_BY_EXTENSION = 16
const val GROUP_BY_FILE_TYPE = 8
const val GROUP_BY_FOLDER = 32
const val GROUP_BY_LAST_MODIFIED = 2
const val GROUP_BY_NONE = 1
const val GROUP_DESCENDING = 1024
const val HTTP_ACCEPTED = 202
const val HTTP_BAD_GATEWAY = 502
const val HTTP_BAD_METHOD = 405
const val HTTP_BAD_REQUEST = 400
const val HTTP_CLIENT_TIMEOUT = 408
const val HTTP_CONFLICT = 409
const val HTTP_CREATED = 201
const val HTTP_ENTITY_TOO_LARGE = 413
const val HTTP_FORBIDDEN = 403
const val HTTP_GATEWAY_TIMEOUT = 504
const val HTTP_GONE = 410
const val HTTP_INTERNAL_ERROR = 500
const val HTTP_LENGTH_REQUIRED = 411
const val HTTP_MOVED_PERM = 301
const val HTTP_MOVED_TEMP = 302
const val HTTP_MULT_CHOICE = 300
const val HTTP_NO_CONTENT = 204
const val HTTP_NOT_ACCEPTABLE = 406
const val HTTP_NOT_AUTHORITATIVE = 203
const val HTTP_NOT_FOUND = 404
const val HTTP_NOT_IMPLEMENTED = 501
const val HTTP_NOT_MODIFIED = 304
const val HTTP_OK = 200
const val HTTP_PARTIAL = 206
const val HTTP_PAYMENT_REQUIRED = 402
const val HTTP_PRECON_FAILED = 412
const val HTTP_PROXY_AUTH = 407
const val HTTP_REQ_TOO_LONG = 414
const val HTTP_REQUESTED_RANGE_NOT_SATISFIABLE = 416
const val HTTP_RESET = 205
const val HTTP_SEE_OTHER = 303
const val HTTP_SERVER_ERROR = 500
const val HTTP_TEMP_REDIRECT = 307
const val HTTP_UNAUTHORIZED = 401
const val HTTP_UNAVAILABLE = 503
const val HTTP_UNSUPPORTED_TYPE = 415
const val HTTP_USE_PROXY = 305
const val HTTP_VERSION = 505
const val KEY_PATH = "path"
const val MAX_REDIRECTS = 5
const val MAX_RETRIES = 5
const val MIMETYPE_DRM_MESSAGE = "application/vnd.oma.drm.message"
const val MIN_PROGRESS_STEP = 65536
const val MIN_PROGRESS_TIME = 2000
const val PREFS_KEY = "Prefs"
const val RETRY_AFTER_X_REDIRECT_COUNT = "method"
const val SORT_BY_ARTIST = 4096
const val SORT_BY_DATE_MODIFIED = 2
const val SORT_BY_DATE_TAKEN = 8
const val SORT_BY_DURATION = 8192
const val SORT_BY_EXTENSION = 16
const val SORT_BY_FIRST_NAME = 128
const val SORT_BY_MIDDLE_NAME = 256
const val SORT_BY_NAME = 1
const val SORT_BY_NUMBER = 64
const val SORT_BY_PATH = 32
const val SORT_BY_SIZE = 4
const val SORT_BY_SURNAME = 512
const val SORT_BY_TITLE = 2048
const val SORT_DESCENDING = 1024
const val SORT_ORDER = "sort_order"
const val STATUS_BAD_REQUEST = 400
const val STATUS_BLOCKED = 498
const val STATUS_CANCELED = 490
const val STATUS_CANNOT_RESUME = 489
const val STATUS_DEVICE_NOT_FOUND_ERROR = 199
const val STATUS_FILE_ALREADY_EXISTS_ERROR = 488
const val STATUS_FILE_ERROR = 492
const val STATUS_HTTP_DATA_ERROR = 495
const val STATUS_HTTP_EXCEPTION = 496
const val STATUS_INSUFFICIENT_SPACE_ERROR = 198
const val STATUS_LENGTH_REQUIRED = 411
const val STATUS_NOT_ACCEPTABLE = 406
const val STATUS_PAUSED_BY_APP = 193
const val STATUS_PENDING = 190
const val STATUS_PRECONDITION_FAILED = 412
const val STATUS_QUEUED_FOR_WIFI = 196
const val STATUS_RUNNING = 192
const val STATUS_SUCCESS = 200
const val STATUS_TOO_MANY_REDIRECTS = 497
const val STATUS_UNHANDLED_HTTP_CODE = 494
const val STATUS_UNHANDLED_REDIRECT = 493
const val STATUS_UNKNOWN_ERROR = 491
const val STATUS_WAITING_FOR_NETWORK = 195
const val STATUS_WAITING_TO_RETRY = 194
const val TYPE_GIFS = 4
const val TYPE_IMAGES = 1
const val TYPE_RAWS = 8
const val TYPE_VIDEOS = 2
const val REAL_FILE_PATH = "real_file_path_2"

const val VISIBILITY_HIDDEN = 2
const val VISIBILITY_VISIBLE = 0
const val VISIBILITY_VISIBLE_NOTIFY_COMPLETED = 1
const val VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION = 3
val audioExtensions: Array<String> get() = arrayOf(".mp3", ".wav", ".wma", ".ogg", ".m4a", ".opus", ".flac", ".aac")
val photoExtensions: Array<String> get() = arrayOf(".jpg", ".png", ".jpeg", ".bmp", ".webp")
val rawExtensions: Array<String> get() = arrayOf(".dng", ".orf", ".nef")
val videoExtensions: Array<String> get() = arrayOf(".mp4", ".mkv", ".webm", ".avi", ".3gp", ".mov", ".m4v", ".3gpp")